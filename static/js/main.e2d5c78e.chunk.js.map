{"version":3,"sources":["App.js","index.js"],"names":["App","state","changeHandler","e","setState","target","name","value","className","onSubmit","preventDefault","props","dispatchRegisterFlight","type","onChange","this","colSpan","flights","map","f","index","key","fn","des","dep","date","id","onClick","dflight","Component","logger","createLogger","Actions","register","delete","initialFlight","flight","store","createStore","action","flightInfo","result","filter","flightID","applyMiddleware","flit","dispatch","console","log","getState","dispatchDeleteFlight","fID","Root","document","getElementById","render","ReactDOM","subscribe"],"mappings":"kPA+FeA,EA7Ff,2MACEC,MAAQ,GADV,EAEEC,cAAgB,SAAAC,GACd,EAAKC,SAAL,eACGD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,SAJhC,wEAQY,IAAD,OACP,OACE,yBAAKC,UAAU,sEACb,0BACEA,UAAU,aACVC,SAAU,SAAAN,GACRA,EAAEO,iBACF,EAAKC,MAAMC,uBAAuB,EAAKX,SAJ3C,iBAQE,2BACEY,KAAK,OACLC,SAAUC,KAAKb,cACfM,UAAU,eACVF,KAAK,OAZT,eAce,IACb,2BACEO,KAAK,OACLC,SAAUC,KAAKb,cACfM,UAAU,oBACVF,KAAK,QAnBT,aAqBa,IACX,2BACEO,KAAK,OACLC,SAAUC,KAAKb,cACfM,UAAU,oBACVF,KAAK,QA1BT,QA4BQ,IACN,2BACEO,KAAK,OACLC,SAAUC,KAAKb,cACfM,UAAU,oBACVF,KAAK,SAEP,2BACEO,KAAK,SACLN,MAAM,WACNC,UAAU,qDAId,2BAAOA,UAAU,yBACf,+BACE,4BACE,iCACA,6CACA,2CACA,yCACA,wBAAIQ,QAAQ,KAAZ,iBAGJ,+BACGD,KAAKJ,MAAMM,QACRF,KAAKJ,MAAMM,QAAQC,KAAI,SAACC,EAAGC,GAAJ,OACrB,wBAAIC,IAAKD,GACP,4BAAKA,EAAQ,GACb,4BAAKD,EAAEG,IACP,4BAAKH,EAAEI,KACP,4BAAKJ,EAAEK,KACP,4BAAKL,EAAEM,MACP,4BACE,2BACEZ,KAAK,SACLL,UAAU,2BACVkB,GAAIP,EAAEG,GACNK,QAAS,SAAAxB,GACP,EAAKQ,MAAMiB,QAAQzB,EAAEE,OAAOqB,KAE9BnB,MAAM,WAKd,YArFhB,GAAyBsB,a,wkBCKzB,IAAMC,EAASC,yBAETC,EAAU,CACdC,SAAU,kBACVC,OAAQ,iBAoBV,IAAMC,EAAgB,CAAEC,OAAQ,IAmDhC,IAAMC,EAAQC,aAjDd,WAAiD,IAAhCrC,EAA+B,uDAAvBkC,EAAeI,EAAQ,uCAC9C,OAAQA,EAAO1B,MACb,IAAK,kBACH,MAAgB,CACduB,OAAO,GAAD,mBACDnC,EAAMmC,QADL,CAEJ,CACEd,GAAIiB,EAAOC,WAAWlB,GACtBC,IAAKgB,EAAOC,WAAWjB,IACvBC,IAAKe,EAAOC,WAAWhB,IACvBC,KAAMc,EAAOC,WAAWf,SAKhC,IAAK,gBACH,IAAMgB,EAASxC,EAAMmC,OAAOM,QAAO,SAAAvB,GACjC,OAAOA,EAAEG,KAAOiB,EAAOI,YAEzB,MAAgB,CACdP,OAAO,YAAKK,IAEhB,QACE,OAAOxC,KA0BsB2C,YAAgBd,IAG7ClB,EAAyB,SAAAiC,GAtE/B,IAAwBT,EAuEtBC,EAAMS,UAvEgBV,EAuEQS,EAtEvB,CACLhC,KAAMmB,EAAQC,SACdO,WAAW,EAAD,GACLJ,MAoEPW,QAAQC,IAAIX,EAAMY,aAGdC,EAAuB,SAAAC,GAlE7B,IAAsBR,EAmEpBN,EAAMS,UAnEcH,EAmEQQ,EAlErB,CACLtC,KAAMmB,EAAQE,OACdS,SAAUA,MAmERS,EAAOC,SAASC,eAAe,QAC/BC,EAAS,WACb,IAAItC,EAAUoB,EAAMY,WAAWb,OAC/BoB,IAASD,OACP,kBAAC,EAAD,CACE3C,uBAAwBA,EACxBK,QAASA,EACTW,QAASsB,IAEXE,IAIJG,IAEAlB,EAAMoB,UAAUF,K","file":"static/js/main.e2d5c78e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport class App extends Component {\n  state = {};\n  changeHandler = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n      // eslint-disable-next-line\n    });\n  };\n  render() {\n    return (\n      <div className=\"container col-6 p-5 border border-1 border-info bg-dark text-white\">\n        <form\n          className=\"form-group\"\n          onSubmit={e => {\n            e.preventDefault();\n            this.props.dispatchRegisterFlight(this.state);\n          }}\n        >\n          Flight Number:\n          <input\n            type=\"text\"\n            onChange={this.changeHandler}\n            className=\"form-control\"\n            name=\"fn\"\n          />\n          Destination:{\" \"}\n          <input\n            type=\"text\"\n            onChange={this.changeHandler}\n            className=\"form-control mt-3\"\n            name=\"des\"\n          />\n          Departure:{\" \"}\n          <input\n            type=\"text\"\n            onChange={this.changeHandler}\n            className=\"form-control mt-3\"\n            name=\"dep\"\n          />\n          Date:{\" \"}\n          <input\n            type=\"text\"\n            onChange={this.changeHandler}\n            className=\"form-control mt-3\"\n            name=\"date\"\n          />\n          <input\n            type=\"submit\"\n            value=\"Register\"\n            className=\"btn btn-primary col-4 float-right p-3 mt-4 mb-5\"\n          />\n        </form>\n\n        <table className=\"table text-white mt-5\">\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>Flight Number</th>\n              <th>Destination</th>\n              <th>Departure</th>\n              <th colSpan=\"2\">Flight Date</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.props.flights\n              ? this.props.flights.map((f, index) => (\n                  <tr key={index}>\n                    <td>{index + 1}</td>\n                    <td>{f.fn}</td>\n                    <td>{f.des}</td>\n                    <td>{f.dep}</td>\n                    <td>{f.date}</td>\n                    <td>\n                      <input\n                        type=\"button\"\n                        className=\"btn btn-danger pr-3 pl-3\"\n                        id={f.fn}\n                        onClick={e => {\n                          this.props.dflight(e.target.id);\n                        }}\n                        value=\"X\"\n                      />\n                    </td>\n                  </tr>\n                ))\n              : null}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { createStore } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport { applyMiddleware } from \"redux\";\n//import { combineReducers } from \"redux\";\nconst logger = createLogger();\n\nconst Actions = {\n  register: \"REGISTER_FLIGHT\",\n  delete: \"DELETE_FLIGHT\"\n};\n\n//create Action\nfunction registerFlight(flight) {\n  return {\n    type: Actions.register,\n    flightInfo: {\n      ...flight\n    }\n  };\n}\n//Action Delete\nfunction deleteFlight(flightID) {\n  return {\n    type: Actions.delete,\n    flightID: flightID\n  };\n}\n\nconst initialFlight = { flight: [] };\n//create reducer\nfunction reducer(state = initialFlight, action) {\n  switch (action.type) {\n    case \"REGISTER_FLIGHT\":\n      return (state = {\n        flight: [\n          ...state.flight,\n          {\n            fn: action.flightInfo.fn,\n            des: action.flightInfo.des,\n            dep: action.flightInfo.dep,\n            date: action.flightInfo.date\n          }\n        ]\n      });\n\n    case \"DELETE_FLIGHT\":\n      const result = state.flight.filter(f => {\n        return f.fn !== action.flightID;\n      });\n      return (state = {\n        flight: [...result]\n      });\n    default:\n      return state;\n  }\n}\n\n//reducer 2\n/* function delete_reducer(state = store.getState(), action) {\n  switch (action.type) {\n    case \"DELETE_FLIGHT\":\n      const result = state.flight.filter(f => {\n        return f.fn !== action.flightID;\n      });\n      return (state = {\n        flight: [...result]\n      });\n\n    default:\n      return state;\n  }\n}\n//combining reducers\nconst rootReducer = combineReducers({\n  register: reducer,\n  delete: delete_reducer\n}); */\n\n//create store\nconst store = createStore(reducer, applyMiddleware(logger));\n\n//method for sending to component for dispatching action register_flight\nconst dispatchRegisterFlight = flit => {\n  store.dispatch(registerFlight(flit));\n  console.log(store.getState());\n};\n\nconst dispatchDeleteFlight = fID => {\n  store.dispatch(deleteFlight(fID));\n};\n\nconst Root = document.getElementById(\"root\");\nconst render = () => {\n  var flights = store.getState().flight;\n  ReactDOM.render(\n    <App\n      dispatchRegisterFlight={dispatchRegisterFlight}\n      flights={flights}\n      dflight={dispatchDeleteFlight}\n    />,\n    Root\n  );\n};\n\nrender();\n//subscribe render method with store container\nstore.subscribe(render);\n"],"sourceRoot":""}